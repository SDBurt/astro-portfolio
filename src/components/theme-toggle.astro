---
---

<button
  id="theme-toggle"
  aria-label="Toggle theme"
  class="theme-toggle-button"
  type="button"
>
  <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
  <svg class="system-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
    <line x1="8" y1="21" x2="16" y2="21"></line>
    <line x1="12" y1="17" x2="12" y2="21"></line>
  </svg>
</button>

<style>
  .theme-toggle-button {
    position: relative;
    width: 36px;
    height: 36px;
    padding: var(--spacing-xs);
    border-radius: var(--radius-md);
    background-color: transparent;
    border: 1px solid var(--color-border);
    color: var(--color-muted-foreground);
    transition: all 150ms ease-in-out;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .theme-toggle-button:hover {
    background-color: var(--color-muted);
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .theme-toggle-button svg {
    position: absolute;
    opacity: 0;
    transform: scale(0.8);
    transition: all 150ms ease-in-out;
  }

  /* Show icons based on current theme */
  :root:not(.dark) .theme-toggle-button .sun-icon {
    opacity: 1;
    transform: scale(1);
  }

  :root.dark .theme-toggle-button .moon-icon {
    opacity: 1;
    transform: scale(1);
  }

  /* System theme detection */
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme]) .theme-toggle-button .moon-icon {
      opacity: 1;
      transform: scale(1);
    }
    :root:not([data-theme]) .theme-toggle-button .sun-icon {
      opacity: 0;
      transform: scale(0.8);
    }
  }

  /* When theme is set to system */
  :root[data-theme="system"] .theme-toggle-button .system-icon {
    opacity: 1;
    transform: scale(1);
  }

  :root[data-theme="system"] .theme-toggle-button .sun-icon,
  :root[data-theme="system"] .theme-toggle-button .moon-icon {
    opacity: 0;
    transform: scale(0.8);
  }
</style>

<script>
  function initThemeToggle() {
    const button = document.getElementById('theme-toggle');
    if (!button) return;

    const themes = ['light', 'dark', 'system'];
    
    function getNextTheme(current: string): string {
      const index = themes.indexOf(current);
      return themes[(index + 1) % themes.length];
    }

    function applyTheme(theme: string) {
      document.documentElement.setAttribute('data-theme', theme);
      
      if (theme === 'system') {
        const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        document.documentElement.classList.toggle('dark', isDark);
      } else {
        document.documentElement.classList.toggle('dark', theme === 'dark');
      }
      
      localStorage.setItem('theme', theme);
    }

    button.addEventListener('click', () => {
      const currentTheme = localStorage.getItem('theme') || 'system';
      const nextTheme = getNextTheme(currentTheme);
      applyTheme(nextTheme);
    });

    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      const theme = localStorage.getItem('theme') || 'system';
      if (theme === 'system') {
        document.documentElement.classList.toggle('dark', e.matches);
      }
    });
  }

  // Initialize on load and after navigation
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  document.addEventListener('astro:after-swap', initThemeToggle);
</script>